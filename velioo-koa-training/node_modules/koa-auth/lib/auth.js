/**
 * The Auth object is added tothe request context inside the koa application. It
 * holds a series of helpers which empower the application developer to create
 * more complex authentication systems.
 *
 * @param {Provider} provider
 * @param {KoaContext} context
 */
var Auth = function Auth(provider, context) {

  this._provider = provider;
  this._context = context;

  // Retrieve the metadata pocket. This pocket must adhere to a specific API.
  this._data = this._provider.getMetadataPocket(this._context);

};

/**
 * This sets the persistent data key value tuple. Basically it sets the session.
 * The reason a special method is created, is to avoid unneccessary session
 * initialization whenever possible.
 *
 * @param {string} key - The key in which the data must be stored
 * @param {mixed} value - The value of the data
 */
Auth.prototype.set = function(key, value) {
  this._data[key] = value;
};

/**
 * This deletes metadata.
 *
 * @param {string} key - The key behind which the data must be destroyed
 */
Auth.prototype.unset = function(key) {
  delete this._data[key];
};

Auth.prototype.authenticate = function(method, data) {
  // Check if already authenticated for that method
  // If not, authenticate said method
  // --> Recalculate authentication level
  // -->
};

Auth.prototype.calculateAuthenticationLevel = function() {
  // This will iterate over every successful authentication
  //
  // var newLevel = 0;
  //
  // this._methods.forEach(function(entry) {
  //    var l = entry.calculateLevel(this);
  //    if (l > newLevel)
  //      newLevel = l;
  // }.bind(this))
  //
  // this.set('level', newLevel);
};

/**
 * This will undo an authentication method and recalculate the authentication
 * level. This is great if you want to use a one-time authentication query. An
 * example would be if you want the user to type in his password to change his
 * email.
 *
 * @param  {[type]} method [description]
 * @return {[type]}        [description]
 */
Auth.prototype.undo = function(method) {

};

Auth.prototype.undoAll = function() {

};

module.exports = Auth;
